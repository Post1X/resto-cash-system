let indexRouter,cors,sequelize,createError,path,express,cookieParser;_a20‍.w("./routes/index",[["default",["indexRouter"],function(v){indexRouter=v}]]);_a20‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_a20‍.w("./services/sequelize",[["default",["sequelize"],function(v){sequelize=v}]]);_a20‍.w("http-errors",[["default",["createError"],function(v){createError=v}]]);_a20‍.w("path",[["default",["path"],function(v){path=v}]]);_a20‍.w("express",[["default",["express"],function(v){express=v}]]);_a20‍.w("cookie-parser",[["default",["cookieParser"],function(v){cookieParser=v}]]);
var app = express();





var morgan = require('morgan');

app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'jade');

sequelize.authenticate()
    .then(() => {
        console.log('Подключение к базе данных успешно');
    })
    .catch((error) => {
        _a20‍.g.console.error('Ошибка подключения к базе данных:', error);
        morgan.error('Database connection error:', error);
    });

app.use(morgan('combined'));
app.use(cors({
    origin: '*',
    methods: ['GET', 'POST', 'PUT', 'DELETE'],
}));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));
app.use('/', indexRouter);
app.use(function (req, res, next) {
    next(createError(404));
});

app.use((err, req, res, next) => {
    res.status(err.status || 500);
    res.json({
        status: "error",
        message: err.message,
        errors: err.errors,
    });
});

module.exports = app;
